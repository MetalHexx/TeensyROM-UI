/**
 * TeensyRom.Api
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { GetDirectoryResponse } from '../model/models';
import { IndexAllResponse } from '../model/models';
import { IndexResponse } from '../model/models';
import { LaunchFileResponse } from '../model/models';
import { LaunchRandomResponse } from '../model/models';
import { ProblemDetails } from '../model/models';
import { StorageScope } from '../model/models';
import { TeensyFilterType } from '../model/models';
import { TeensyStorageType } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface DevicesDeviceIdStorageStorageTypeDirectoriesGetRequestParams {
    deviceId: string;
    storageType: TeensyStorageType;
    path?: string;
}

export interface DevicesDeviceIdStorageStorageTypeIndexPostRequestParams {
    deviceId: string;
    storageType: TeensyStorageType;
    body?: string;
}

export interface DevicesDeviceIdStorageStorageTypeLaunchPostRequestParams {
    deviceId: string;
    storageType: TeensyStorageType;
    filePath: string;
}

export interface DevicesDeviceIdStorageStorageTypeRandomLaunchPostRequestParams {
    deviceId: string;
    storageType: TeensyStorageType;
    filterType?: TeensyFilterType;
    scope?: StorageScope;
    startingDirectory?: string;
}


export interface FilesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * Gets a directory for given storage device
* @param requestParameters
     */
    devicesDeviceIdStorageStorageTypeDirectoriesGet(requestParameters: DevicesDeviceIdStorageStorageTypeDirectoriesGetRequestParams, extraHttpRequestParams?: any): Observable<GetDirectoryResponse>;

    /**
     * 
     * Indexes the directory structure of a given TR device and storage  type.
* @param requestParameters
     */
    devicesDeviceIdStorageStorageTypeIndexPost(requestParameters: DevicesDeviceIdStorageStorageTypeIndexPostRequestParams, extraHttpRequestParams?: any): Observable<IndexResponse>;

    /**
     * 
     * Launches a file given a valid path to a file stored on the TeensyRom.
* @param requestParameters
     */
    devicesDeviceIdStorageStorageTypeLaunchPost(requestParameters: DevicesDeviceIdStorageStorageTypeLaunchPostRequestParams, extraHttpRequestParams?: any): Observable<LaunchFileResponse>;

    /**
     * 
     * Launches a random file given a device, storage and starting directory location.
* @param requestParameters
     */
    devicesDeviceIdStorageStorageTypeRandomLaunchPost(requestParameters: DevicesDeviceIdStorageStorageTypeRandomLaunchPostRequestParams, extraHttpRequestParams?: any): Observable<LaunchRandomResponse>;

    /**
     * 
     * Indexes all storage for all connected TeensyRom devices.
*/
    filesIndexAllPost(extraHttpRequestParams?: any): Observable<IndexAllResponse>;

}
