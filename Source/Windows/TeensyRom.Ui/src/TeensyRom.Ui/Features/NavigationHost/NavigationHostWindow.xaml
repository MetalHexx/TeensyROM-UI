<Window x:Class="TeensyRom.Ui.Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TeensyRom.Ui"
        mc:Ignorable="d"
        Title="{Binding Title}" 
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        WindowStartupLocation="CenterScreen"        
        Foreground="White"
        Width="1300" 
        Height="850">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="50" GlassFrameThickness="0" ResizeBorderThickness="10" />
    </WindowChrome.WindowChrome>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Close" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Maximize" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Minimize" />
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Restore" />
    </Window.CommandBindings>

    <Window.Resources>
        <!--Base style for title bar buttons-->
        <Style x:Key="CaptionButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="LayoutRoot" Background="{x:Null}" Width="44" Height="50">
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" FontWeight="DemiBold" 
                                Foreground="{StaticResource PrimaryHueLightBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5"/>
                                <Setter TargetName="LayoutRoot" Property="Opacity" Value=".3"/>
                                <Setter TargetName="txt" Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Minimize-->
        <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE949;"/>
        </Style>

        <!--Maximize-->
        <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE739;"/>
        </Style>

        <!--Restore-->
        <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE923;"/>
        </Style>

        <!--Close-->
        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE106;"/>
        </Style>

        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="200">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="60">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="FadeInOverlay">
            <DoubleAnimation
            Storyboard.TargetName="Overlay"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="0:0:0.3" />
        </Storyboard>
        <Storyboard x:Key="FadeOutOverlay">
            <DoubleAnimation
            Storyboard.TargetName="Overlay"
            Storyboard.TargetProperty="Opacity"
            From="1"
            To="0"
            Duration="0:0:0.3" />
        </Storyboard>
    </Window.Resources>

    <Border x:Name="MainWindowBorder" BorderBrush="{x:Null}" BorderThickness="0" >
        <Grid x:Name="parentContainer" Background="{DynamicResource MaterialDesignPaper}">
            <Grid.RowDefinitions>
                <RowDefinition Height ="Auto"/>
                <RowDefinition Height ="*"/>
            </Grid.RowDefinitions>

            <!--Window chrome-->
            <Grid Grid.Row="0" Height="50" Background="{DynamicResource PrimaryHueDarkBrush}" Panel.ZIndex="1">
                <Grid.Effect>
                    <DropShadowEffect 
                        Color="Black" 
                        Direction="0" 
                        ShadowDepth="2" 
                        BlurRadius="10" 
                        Opacity="0.6"/>
                </Grid.Effect>

                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ToggleButton 
                        x:Name="LeftNavButton" 
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                        Click="LeftNavButton_Click"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        HorizontalAlignment="Right"
                        Margin="0 0 15 0"
                        Grid.Column="0" Height="30" Width="30"/>
                    
                    <Grid Grid.Column="1">
                        <Grid.Effect>
                            <DropShadowEffect 
                                Color="{DynamicResource Primary700}" 
                                Direction="270"
                                ShadowDepth="5"
                                BlurRadius="10" 
                                Opacity="0.6"/>
                        </Grid.Effect>
                        <TextBlock Text="{Binding Title}" Style="{StaticResource MainTitle}" FontFamily="Arial" FontSize="24" Margin="0 0 0 0" VerticalAlignment="Center"/>
                    </Grid>
                    
                    <TextBlock Text="{Binding Version}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Foreground="DarkGray" Margin="-210 0 0 0"/>
                </Grid>

                <!--Caption buttons-->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                    <Button Style="{StaticResource MinimizeButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Minimize"
                        Command="{x:Static SystemCommands.MinimizeWindowCommand}"/>
                    <Button x:Name="RestoreButton" Visibility="Collapsed" Style="{StaticResource RestoreButtonStyle}" 
                        Command="{x:Static SystemCommands.RestoreWindowCommand}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Restore"/>
                    <Button x:Name="MaximizeButton" Visibility="Visible" Style="{StaticResource MaximizeButtonStyle}" 
                        Command="{x:Static SystemCommands.MaximizeWindowCommand}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Maximize" />
                    <Button Style="{StaticResource CloseButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Close"
                        Command="{x:Static SystemCommands.CloseWindowCommand}"/>
                </StackPanel>
            </Grid>

            <!--App content-->
            <Grid Grid.Row="1" x:Name="AppArea">
                <materialDesign:DialogHost
                    Identifier="RootDialog"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    CloseOnClickAway="False">

                    <Grid>
                        <StackPanel Orientation="Horizontal" Panel.ZIndex="2">

                            <Grid x:Name="GridMenu" Width="60" HorizontalAlignment="Left" Background="{DynamicResource MaterialDesignCardBackground}" Opacity="1" Panel.ZIndex="2">
                                <Grid.Effect>
                                    <DropShadowEffect 
                                        Color="Black" 
                                        Direction="0" 
                                        ShadowDepth="2" 
                                        BlurRadius="10" 
                                        Opacity="0.2"/>
                                </Grid.Effect>
                                    <StackPanel>
                                        <ItemsControl x:Name="ProfileList" ItemsSource="{Binding NavigationItems}" Foreground="{DynamicResource PrimaryHueLightBrush}" Margin="0 10">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Button
                                                        Command="{Binding ElementName=ProfileList, Path=DataContext.NavigateCommand}" 
                                                        CommandParameter="{Binding}" 
                                                        IsEnabled="{Binding IsEnabled}"
                                                        Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="9 0" HorizontalAlignment="Left" Width="200">
                                                    <Button.Template>
                                                        <ControlTemplate>
                                                            <Border Background="Transparent">

                                                                <StackPanel                                                                     
                                                                    Orientation="Horizontal" 
                                                                    Height="200" Margin="8 10 0 0" 
                                                                    VerticalAlignment="Center" HorizontalAlignment="Left">

                                                                    <materialDesign:PackIcon 
                                                                        Kind="{Binding Path=Icon}"  
                                                                        Foreground="{DynamicResource PrimaryHueLightBrush}" 
                                                                        Visibility="{Binding IsSelected, Converter={StaticResource InverseBoolToVisibilityConvertor}}"
                                                                        Width="25" Height="25" VerticalAlignment="Center"/>

                                                                    <materialDesign:PackIcon 
                                                                        Kind="{Binding Path=Icon}"  
                                                                        Foreground="{StaticResource EnabledColor}" 
                                                                        Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConvertor}}"
                                                                        Width="25" Height="25" VerticalAlignment="Center"/>

                                                                    <TextBlock 
                                                                        Text="{Binding Path=Name}" 
                                                                        Visibility="{Binding IsSelected, Converter={StaticResource InverseBoolToVisibilityConvertor}}" 
                                                                        Foreground="{DynamicResource PrimaryHueLightBrush}" 
                                                                        VerticalAlignment="Center" Margin="20"/>
                                                                    
                                                                    <TextBlock 
                                                                        Text="{Binding Path=Name}" 
                                                                        Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConvertor}}" 
                                                                        Foreground="{StaticResource EnabledColor}" 
                                                                        VerticalAlignment="Center" Margin="20"/>

                                                                </StackPanel>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>

                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                                <TextBlock Text="{Binding Version}" Visibility="{Binding IsNavOpen, Converter={StaticResource BoolToVisibilityConvertor}}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0 0 0 10" Foreground="DarkGray"/>
                            </Grid>
                        </StackPanel>

                        <Border x:Name="Overlay"
                            MouseUp="Overlay_MouseUp"
                            Background="#50000000"
                            Visibility="Collapsed"                            
                            Panel.ZIndex="1"                            
                            Grid.RowSpan="2"/>  

                        <Grid Grid.Column="1" Margin="80 20 20 20">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Button x:Name="FocusResetButton"
                                Width="1" Height="1"
                                Opacity="0"
                                IsTabStop="False"
                                Focusable="True"/>     

                            <materialDesign:Card Grid.Row="1" Padding="0 0 0 0" VerticalAlignment="Stretch">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ContentControl Content="{Binding CurrentViewModel}" Opacity="0" Grid.Row="0" Margin="10">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TriggerAnimation}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                        From="0.0" To="1.0" Duration="0:0:0.3"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>

                                    <ProgressBar
                                        Visibility="{Binding SerialBusy, Converter={StaticResource BoolToVisibilityConvertor}}"
                                        IsIndeterminate="True"
                                        VerticalAlignment="Bottom"
                                        HorizontalAlignment="Stretch"
                                        Height="5" 
                                        Panel.ZIndex="1"                            
                                        Margin="0">
                                    </ProgressBar>

                                </Grid>
                            </materialDesign:Card>

                            <materialDesign:Snackbar 
                                MessageQueue="{Binding MessageQueue}" 
                                Grid.Row="7" VerticalAlignment="Bottom" />
                        </Grid>

                    </Grid>
                </materialDesign:DialogHost>
            </Grid>
        </Grid>
    </Border>
</Window>
