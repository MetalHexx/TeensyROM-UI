<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:TeensyRom.Ui.Helpers"
    xmlns:playlist="clr-namespace:TeensyRom.Ui.Controls.Playlist"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="EnabledColor" Color="#7FDBD6"/>
    
    <Style x:Key="NullAsNone" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                <Setter Property="Text" Value="None" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlaybarButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5 0 5 0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}"/>
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolbarBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="0.2"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="0 0 5 0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="45"/>
    </Style>
    <Style x:Key="SectionBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="0.2"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="0 0 5 0"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="PlaybarPrevSkipButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5 0 5 0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TrButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource EnabledColor}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StorageIconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource EnabledColor}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="StorageToggleIconButton" TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
    
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource EnabledColor}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DropShadowButton" TargetType="Button" BasedOn="{StaticResource StorageIconButton}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect 
                    Color="Black" 
                    Direction="270"
                    ShadowDepth="5"
                    BlurRadius="10" 
                    Opacity="0.6"/>
            </Setter.Value>
        </Setter>
    </Style>

    

    <SolidColorBrush x:Key="PastelGreen" Color="#86c691" />
    <SolidColorBrush x:Key="PastelRed" Color="#cc666c" />
    <SolidColorBrush x:Key="PastelBlue" Color="#87ceeb" />
    <SolidColorBrush x:Key="PastelOrange" Color="#f5b185" />
    <SolidColorBrush x:Key="PastelYellow" Color="#f8e58e" />

    <Style x:Key="FastForwardButtonStyle" TargetType="Button" BasedOn="{StaticResource TrButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding FastForwardSpeed}" Value="Off">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding FastForwardSpeed}" Value="Medium">
                <Setter Property="Foreground" Value="{StaticResource PastelGreen}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding FastForwardSpeed}" Value="MediumFast">
                <Setter Property="Foreground" Value="{StaticResource PastelYellow}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding FastForwardSpeed}" Value="Fast">
                <Setter Property="Foreground" Value="{StaticResource PastelOrange}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding FastForwardSpeed}" Value="Hyper">
                <Setter Property="Foreground" Value="{StaticResource PastelRed}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="TimerModeButtonStyle" TargetType="Button" BasedOn="{StaticResource StorageIconButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding TimedPlayEnabled}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource EnabledColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowBorder" TargetType="Border"></Style>

    <Style x:Key="SectionTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
    </Style>

    <Style x:Key="LargeLabel" TargetType="Label">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="White"/>        
    </Style>

    <Style x:Key="MainTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="Heading" TargetType="Label">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="LightButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedSecondaryLightButton}">
        <Setter Property="Width" Value="120" />
    </Style>

    <Style x:Key="ListBoxItemStretch" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
    </Style>

    <Style x:Key="gridViewNoHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <DataTemplate x:Key="ConfirmationDialogTemplate">
        <StackPanel Background="#424242" MaxWidth="500">
            
            <Rectangle HorizontalAlignment="Stretch" Height="8" Fill="{StaticResource PrimaryHueDarkBrush}"/>

            <TextBlock Text="{Binding Title}" TextAlignment="Center" HorizontalAlignment="Stretch" Height="17"  Background="{StaticResource PrimaryHueDarkBrush}"/>

            <Rectangle HorizontalAlignment="Stretch" Height="5" Fill="{StaticResource PrimaryHueDarkBrush}"/>

            <TextBlock Text="{Binding Content}" 
                Foreground="White" 
                FontSize="16" 
                HorizontalAlignment="Left"                  
                TextWrapping="Wrap" 
                TextAlignment="Left"
                Margin="20"/>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 0 10">
                <Button Content="Ok" 
                    IsDefault="True" 
                    Command="materialDesign:DialogHost.CloseDialogCommand" 
                    CommandParameter="{x:Static sys:Boolean.TrueString}"
                    Margin="10"/>
                <Button Content="Cancel" 
                    Style="{StaticResource MaterialDesignFlatLightButton}" 
                    IsCancel="True" 
                    Command="materialDesign:DialogHost.CloseDialogCommand" 
                    CommandParameter="{x:Static sys:Boolean.FalseString}"
                    Margin="10"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>
    
    <DataTemplate x:Key="PlayListDialogTemplate">
        <StackPanel Background="#424242" MaxWidth="500" HorizontalAlignment="Center">

            <Rectangle HorizontalAlignment="Stretch" Height="8" Fill="{StaticResource PrimaryHueDarkBrush}"/>

            <TextBlock Text="Add to Playlist" TextAlignment="Center" HorizontalAlignment="Stretch" Height="17"  Background="{StaticResource PrimaryHueDarkBrush}"/>

            <Rectangle HorizontalAlignment="Stretch" Height="5" Fill="{StaticResource PrimaryHueDarkBrush}"/>
            
        
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>               
            
                <ListBox ItemsSource="{Binding PlaylistItems}" Grid.Row="1" Margin="0 0 0 10">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <CheckBox IsChecked="{Binding IsSelected}" Margin="0 0 10 0"/>
                                <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="20 0 0 0">
                    <TextBox Width="300" 
                        ToolTip="Enter playlist name..."
                        materialDesign:HintAssist.Hint="Name">
                        <TextBox.Text>
                            <Binding Path="NewPlaylist.Name" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <playlist:DirectoryNameValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Button Content="Create Playlist"
                        Style="{StaticResource MaterialDesignFlatLightButton}"
                        Command="{Binding CreatePlaylistCommand}"
                        CommandParameter="{Binding NewPlaylist}"
                        IsEnabled="{Binding CanCreatePlaylist}"
                        Width="110"
                        Height="30"
                        Padding="0"
                        Margin="10 0 10 0"/>
                </StackPanel>            
            </Grid>
            
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 0 10">
                <Button Grid.Row="3"
                    Content="Save"
                    Command="{Binding SaveCommand}"
                    HorizontalAlignment="Right"
                    Width="100"/>
                <Button Content="Cancel" 
                    Style="{StaticResource MaterialDesignFlatLightButton}" 
                    IsCancel="True" 
                    Command="materialDesign:DialogHost.CloseDialogCommand" 
                    CommandParameter="{x:Static sys:Boolean.FalseString}"
                    Margin="10"/>
            </StackPanel>
    </StackPanel>
</DataTemplate>

    <DataTemplate x:Key="NoCloseDialogTemplate">
        <StackPanel Background="#424242" MaxWidth="500">

            <Rectangle HorizontalAlignment="Stretch" Height="8" Fill="{StaticResource PrimaryHueDarkBrush}"/>

            <TextBlock Text="{Binding Title}" TextAlignment="Center" HorizontalAlignment="Stretch" Height="17"  Background="{StaticResource PrimaryHueDarkBrush}"/>

            <Rectangle HorizontalAlignment="Stretch" Height="5" Fill="{StaticResource PrimaryHueDarkBrush}"/>

            <TextBlock Text="{Binding Content}" 
            Foreground="White" 
            FontSize="16" 
            HorizontalAlignment="Left"                  
            TextWrapping="Wrap" 
            TextAlignment="Left"
            Margin="20"/>
        </StackPanel>
    </DataTemplate>



    <helpers:BoolToVisibilityConvertor x:Key="BoolToVisibilityConvertor"/>
    <helpers:InverseBoolToVisibilityConvertor x:Key="InverseBoolToVisibilityConvertor"/>
    <helpers:BooleanInverterConverter x:Key="BooleanInverterConverter"/>
    <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
    <helpers:NullOrEmptyToVisibilityConverter x:Key="NullOrEmptyToVisibilityConverter"/>
    <helpers:InverseNullOrEmptyToVisibilityConverter x:Key="InverseNullOrEmptyToVisibilityConverter"/>
    <helpers:StringToPackIconKindConverter x:Key="StringToPackIconKindConverter"/>
    <helpers:EnumDisplayNameConverter x:Key="EnumDisplayNameConverter" />

</ResourceDictionary>